<?php

namespace App\Utils\Match;

trait TestMatch
{
    /**
     * Получить отношение внешности
     */
    private function matchTest()
    {
        # Устанавливаем нулевое значение процента
        $percent = 0;

        $fields = collect(array_keys(config("app.questionnaire.value.test")));

        # Моя внешность
        $my = $this->currentMy->only($fields);

        # Внешность партнера
        $partner = $this->currentPartner->only($fields);

//        $this->similarMatch($percent, 'test');

//        $count = count($fields);
//
//        # A Б В Г Д Е
//        # 1 2 3 4 5 6
        $matched = [
            [ // 1
                "0.9" => [[1, 1], [2, 2], [3, 3], [4, 4]],
                "0.6" => [[1, 4], [2, 4]],
                "0.3" => [[2, 4], [3, 4]],
                "0.0" => [[1, 2], [1, 3]]
            ],
            [ // 2
                "0.9" => [[1, 1], [2, 2], [3, 3]],
                "0.6" => [[1, 3]],
                "0.3" => [[2, 3]],
                "0.0" => [[1, 2]]
            ],
            [ // 3
                "0.9" => [[1, 1], [2, 2], [3, 3], [4, 4], [5, 5], [6, 6], [2, 4]],
                "0.6" => [[1, 6], [2, 6], [3, 6], [2, 5], [2, 3], [3, 6]],
                "0.3" => [[5, 3], [4, 6], [1, 3], [3, 5], [1, 4]],
                "0.0" => [[1, 2], [1, 5], [4, 5], [5, 6]]
            ],
            [ // 4
                "0.9" => [[1, 1], [2, 2], [3, 3]],
                "0.6" => [[2, 3]],
                "0.3" => [[1, 3]],
                "0.0" => [[1, 2]]
            ],
            [ // 5
                "0.9" => [[1, 1], [2, 2], [3, 3]],
                "0.6" => [[1, 3]],
                "0.3" => [[1, 2]],
                "0.0" => [[2, 3]]
            ],
            [ // 6
                "0.9" => [[1, 1], [2, 2], [3, 3]],
                "0.6" => [[1, 3]],
                "0.3" => [[2, 3]],
                "0.0" => [[1, 2]]
            ],
            [ // 7
                "0.9" => [[1, 1], [2, 2], [3, 3], [4, 4]],
                "0.6" => [[2, 3], [1, 3]],
                "0.3" => [[2, 4], [1, 4]],
                "0.0" => [[1, 2], [3, 4]]
            ],
            [ // 8
                "0.9" => [[1, 1], [2, 2], [3, 3], [4, 4]],
                "0.6" => [[1, 2], [3, 4]],
                "0.3" => [[2, 3], [1, 3]],
                "0.0" => [[1, 4], [2, 4]]
            ],
            [ // 9
                "0.9" => [[1, 1], [2, 2], [3, 3]],
                "0.6" => [[1, 3]],
                "0.3" => [[2, 3]],
                "0.0" => [[1, 2]]
            ],
            [ // 10
                "0.9" => [[1, 1], [2, 2], [3, 3]],
                "0.6" => [[2, 3]],
                "0.3" => [[1, 3]],
                "0.0" => [[1, 2]]
            ],
            [ // 11
                "0.9" => [[1, 1], [2, 2], [3, 3]],
                "0.6" => [[1, 3]],
                "0.3" => [[2, 3]],
                "0.0" => [[1, 2]]
            ],
            [ // 12
                "0.9" => [[1, 1], [2, 2], [3, 3], [4, 4]],
                "0.6" => [[3, 4], [1, 2]],
                "0.3" => [[2, 3]],
                "0.0" => [[1, 3], [1, 4], [2, 4]]
            ],
            [ // 13
                "0.9" => [[1, 1], [2, 2], [3, 3], [4, 4]],
                "0.6" => [[2, 4], [2, 3]],
                "0.3" => [[1, 2]],
                "0.0" => [[1, 3], [1, 4], [3, 4]]
            ],
            [ // 14
                "0.9" => [[1, 1], [2, 2], [3, 3]],
                "0.6" => [[2, 3]],
                "0.3" => [[1, 2]],
                "0.0" => [[1, 3]]
            ],
            [ // 15
                "0.9" => [[1, 1], [2, 2], [3, 3], [4, 4]],
                "0.6" => [[1, 4], [2, 3]],
                "0.3" => [[1, 2], [2, 4]],
                "0.0" => [[1, 3], [3, 4]]
            ],
            [ // 16
                "0.9" => [[1, 1], [2, 2], [3, 3], [4, 4], [5, 5]],
                "0.6" => [[1, 3], [1, 4], [2, 5], [4, 5]],
                "0.3" => [[1, 5], [3, 4], [1, 5]],
                "0.0" => [[2, 3], [2, 4], [3, 5]]
            ],
            [ // 17
                "0.9" => [[1, 3], [2, 4], [2, 6], [3, 7], [4, 6], [5, 5], [5, 6], [6, 6]],
                "0.6" => [[1, 4], [1, 7], [2, 2], [3, 3], [4, 4], [2, 5], [4, 5], [7, 7]],
                "0.3" => [[1, 5], [1, 1], [2, 3], [4, 7], [3, 5]],
                "0.0" => [[1, 2], [1, 6], [2, 7], [3, 4], [3, 7], [5, 7], [6, 7]]
            ],
            [ // 18
                "0.9" => [[2, 2], [4, 4], [5, 5], [5, 6]],
                "0.6" => [[1, 2], [2, 4], [2, 3]],
                "0.3" => [[1, 4], [1, 5], [3, 4], [1, 3]],
                "0.0" => [[1, 1], [3, 3], [3, 5]]
            ],
            [ // 19
                "0.9" => [[1, 1], [2, 2], [3, 3], [2, 3], [4, 4], [4, 2]],
                "0.6" => [[3, 4]],
                "0.3" => [[1, 3], [1, 4]],
                "0.0" => [[1, 2]]
            ],
            [ // 20
                "0.9" => [[1, 1], [2, 2]],
                "0.6" => [[-1, -1]],
                "0.3" => [[-1, -1]],
                "0.0" => [[1, 2]]
            ],
            [ // 21
                "0.9" => [[1, 4], [2, 3]],
                "0.6" => [[3, 4], [4, 4], [2, 2]],
                "0.3" => [[2, 4], [1, 2], [3, 3]],
                "0.0" => [[1, 1], [1, 3]],
            ]
        ];
//
//        dd($my, $partner, $matched);

//        # Получаем кол-во элементов, которые сошлись
//        $result = $my->filter(fn($item, $key) => $item === $partner[$key])->count();


        $result = [];
        $c = 0;
        foreach ($matched as $key=>$question) {
            $c++;
            $obj = [array_values($my->toArray())[$key]+1, array_values($partner->toArray())[$key]+1];
            foreach ($question as $p=>$percent) {
                foreach ($percent as $value) {
                    if( ($value[0] === $obj[0] && $value[1] === $obj[1]) || ($value[1] === $obj[0] && $value[0] === $obj[1]))
                        $result[$key] = $p;

                }
            }
        }
        $sum = 0;
        foreach ($result as $item) {
            $sum += (float)$item;
        }

        $percent = round($sum / $c * 100, 2);

        # Добавляем в коллекцию результат
        $this->matchResult = $this->matchResult->put('test', $percent);
    }
}
